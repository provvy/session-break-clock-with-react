{"version":3,"sources":["components/Control.js","components/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Control","props","className","id","label","disabled","onClick","decrease","value","increase","Timer","style","minutes","seconds","App","useState","controls","setControls","setMinutes","setSeconds","active","setActive","running","setRunning","audio","useRef","useEffect","interval","setInterval","current","play","newArr","clearInterval","map","el","idx","index","newArr1","newArr2","color","pause","currentTime","ref","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.819e1115.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Control = (props) => {\r\n  return (\r\n    <div className=\"labels-div\">\r\n      <div className=\"label\" id={`${props.id}-label`}>{props.label}</div>\r\n      <div className=\"buttons-div\">\r\n        <button disabled={props.disabled} onClick={props.decrease} id={`${props.id}-decrement`}><i className=\"fas fa-arrow-down fa-2x\"></i></button>\r\n        <span id={`${props.id}-length`}>{props.value}</span>\r\n        <button disabled={props.disabled} onClick={props.increase} id={`${props.id}-increment`}><i className=\"fas fa-arrow-up fa-2x\"></i></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Control;\r\n","import React from \"react\";\r\n\r\nconst Timer = (props) => {\r\n  return (\r\n    <div style={props.style} className=\"timer-div\">\r\n      <div id=\"timer-label\">{props.label}</div>\r\n      <div id=\"time-left\">{props.minutes < 10 ? (\"0\" + props.minutes) : props.minutes}:{props.seconds < 10 ? (\"0\" + props.seconds) : props.seconds}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer;\r\n","import './App.css';\nimport React, {useState, useEffect, useRef} from \"react\";\nimport Control from \"./components/Control.js\";\nimport Timer from \"./components/Timer.js\";\n\nfunction App() {\n  const [controls, setControls] = useState([\n    {label: \"Break Length\",\n     id: \"break\",\n     value: 5},\n    {label: \"Session Length\",\n     id: \"session\",\n     value: 25}\n  ])\n  const [minutes, setMinutes] = useState([5, 25]);\n  const [seconds, setSeconds] = useState(0);\n  const [active, setActive] = useState(true);\n  const [running, setRunning] = useState(false);\n  const audio = useRef(null);\n\n  useEffect(() => {\n    if (running) {\n      const interval = setInterval(() => {\n        switch(seconds) {\n          case 0:\n            if (minutes[1] < 1) {\n              audio.current.play();\n              setActive(active => !active);\n              minutes[1] = controls[1].value;\n              let newArr = [...minutes];\n              setMinutes(newArr);\n              break;\n            } else if (minutes[0] < 1) {\n              audio.current.play();\n              setActive(active => !active);\n              minutes[0] = controls[0].value;\n              let newArr = [...minutes];\n              setMinutes(newArr);\n              break;\n            }\n            setSeconds(59);\n            active ? minutes[1]-- : minutes[0]--;\n            let newArr = [...minutes];\n            setMinutes(newArr);\n            break;\n          default:\n            setSeconds(seconds => seconds - 1);\n            break;\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [running, seconds, active]);\n\n  const playPause = () => {\n    setRunning(!running);\n  }\n\n  const increase = (index) => {\n    controls[index].value++;\n    if (controls[index].value >= 60) {\n      controls[index].value = 60;\n    }\n    minutes[index] = controls[index].value;\n    let newArr1 = [...minutes];\n    let newArr2 = [...controls];\n    setControls(newArr2);\n    setMinutes(newArr1);\n    setSeconds(0);\n  }\n\n  const decrease = (index) => {\n    controls[index].value--;\n    if (controls[index].value <= 1) {\n      controls[index].value = 1;\n    }\n    minutes[index] = controls[index].value;\n    let newArr1 = [...minutes];\n    let newArr2 = [...controls];\n    setControls(newArr2);\n    setMinutes(newArr1);\n    setSeconds(0);\n  }\n\n  const reset = () => {\n    setRunning(false);\n    setSeconds(0);\n    setActive(true);\n    controls[0].value = 5;\n    controls[1].value = 25;\n    minutes[0] = controls[0].value;\n    minutes[1] = controls[1].value;\n    let newArr1 = [...controls];\n    let newArr2 = [...minutes];\n    setControls(newArr1);\n    setMinutes(newArr2);\n    audio.current.pause();\n    audio.current.currentTime = 0;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">25 + 5 Clock</div>\n      <div className=\"controls-div\">\n        {\n          controls.map((el, idx) => (\n            <Control disabled={running} decrease={() => decrease(idx)} increase={() => increase(idx)} id={controls[idx].id} label={controls[idx].label} value={controls[idx].value} key={idx} />\n          ))\n        }\n      </div>\n      <Timer style={minutes[0] === 0 ? {color: \"red\"} : {color: \"white\"}} minutes={active ? minutes[1] : minutes[0]} seconds={seconds} label={active ? \"Session\" : \"Break\"} />\n      <div className=\"buttons\">\n        <button onClick={playPause} id=\"start_stop\"><i className=\"fas fa-play\"></i><i className=\"fas fa-pause\"></i></button>\n        <button onClick={reset} id=\"reset\"><i className=\"fas fa-sync-alt\"></i></button>\n      </div>\n      <audio ref={audio} id=\"beep\" src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"></audio>\n      <footer>coded by Paolo Provveduto</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}